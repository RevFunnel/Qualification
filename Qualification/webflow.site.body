<script type="text/javascript">  
	
    $(document).ready(function($){ 
	
		Qualification = new QualificationApp();

		$(window).load(function(){
			$.webshims.polyfill('forms');
		});

		//date formats for handlebar scripts
		var DateFormats = {
				short: "DD MMMM - YYYY",
				long: "dddd DD.MM.YYYY HH:mm",
				year: "YYYY",
				month: "MMMM",
				monthYear: "MMM YYYY"
			};
			
		// register helper to handle date formats in handlebar templates
		Handlebars.registerHelper("formatDate", function(datetime, format) {
		  if (moment) {
			// can use other formats like 'lll' too
			format = DateFormats[format] || format;
			return moment(datetime).format(format);
		  }
		  else {
			return datetime;
		  }
		});
		
		/* SEGMENTS */
		//add segments data if we have it (this is dynamically set via embed codes in dynamic collection)
		if ("segments" in window)
		{			
			Qualification.Segments = window.segments;
		}
		
		//grab defined segment from global object and set the title if we have it (set via embed code)
		if ("Segment" in window) Qualification.Segment = window.Segment;
		
		//if we don't have a segment defined, but we have one in the url then setup the segment
		if ((!('Segment' in Qualification)) && getParam('segId') && 'Segments' in Qualification){
			Qualification.Segment = Qualification.Segments[getParam('segId')];
		}
		
		//now persist our segment if we have set it up, or look to local storage for one if we still don't have one
		if ('Segment' in Qualification){
			Qualification.DB.setItem('qualification.segment', JSON.stringify(Qualification.Segment))
		}
		else {
			Qualification.Segment = window.JSON.parse(Qualification.DB.getItem('qualification.segment'));
		}
		
		if ('Segment' in Qualification && Qualification.Segment !== null) 
		{		
			//setup the title for the segment based on url parameters that override the segment name for on-page dynamic replacement
			Qualification.Segment.title = (getParam('area') || getParam('title')) ? getParam('area') || getParam('title') : Qualification.Segment.name;
			$(".main-heading-span > span").html(Qualification.Segment.title);
			
			//log our segment with GA 	
			if ("dataLayer" in window)
			{
				window.dataLayer.push({
					'event' : 'addToCustomDimension',
					'eventCategory' : 'custom dimension',
					'eventAction' : 'add to custom dimension',
					'eventLabel' : Qualification.Segment.name.toLowerCase(),
					'eventValue' : '2',
					'eventNonInteractionHit' : true
				});
			}
		}
		
		/*EXPERIMENT*/
		Qualification.experimentId = Qualification.DB.getItem('qualification.experiment');
		
		
		/*ANSWERS*/
		
		//do we have existing answers?
		var answers = window.JSON.parse(Qualification.DB.getItem('qualification.answers'));
		if (answers && !($.isEmptyObject(answers))){
			Qualification.Answers = answers;
		} else {
			//no, so loop through our query params and check if the param is the key to an answer
			Qualification.Answers = Qualification.Answers || {};
			for(var key in Qualification.UrlParams) {
				if (Qualification.Questions[key]){
					Qualification.Answers = Qualification.Answers || {};
					//we have an answer so add to answers 
					Qualification.Answers[key] = {
						'id' : key,
						'value': Qualification.UrlParams[key]
					}
					//check if we have a question with defined data (a drop down)
					var q = $.grep(Qualification.Questions[key],function(e){return e.val.toString() === Qualification.UrlParams[key]})[0];
					if (!(q === undefined)) Qualification.Answers[key].selectedText = q.text
				};
					
			}
			Qualification.DB.setItem('qualification.answers', JSON.stringify(Qualification.Answers))
		}
		
		Qualification.Session = sessionStorage;
		
		//is visitor returning?
		var user = window.JSON.parse(Qualification.DB.getItem('qualification.user'));
		if(user){
			
			Qualification.User = user;
			
			//boot intercom for user if we have email
			if ("email" in user){
				window.Intercom("boot", {
					app_id: window.intercomAppId,
					email: user.email
				});
			}
		
			//store details of the visit in session storage
			Qualification.Visit = window.JSON.parse(Qualification.Session.getItem('qualification.visit'));
			if (Qualification.Visit == undefined){
				Qualification.Visit = {
					'session_url': window.location.href,
					'session_referrer': document.referrer
				}
				Qualification.Session.setItem('qualification.visit', JSON.stringify(Qualification.Visit));
			}
		
		}else {
			//no, so assign a visitorId
			var uniqueId = GenerateId();	
			
			Qualification.User = {
				'visitorId':uniqueId,
				'session_url': window.location.href,
				'session_referrer': document.referrer
			};
			Qualification.DB.setItem('qualification.user', JSON.stringify(Qualification.User));
			
			Qualification.Visit = {
				'session_url': window.location.href,
				'session_referrer': document.referrer
			}
			Qualification.Session.setItem('qualification.visit', JSON.stringify(Qualification.Visit));
		}

		//add all query params to any forms on the page
		for(var index in Qualification.UrlParams) {
			$('<input />').attr('type', 'hidden')
				.attr('name', index)
				.attr('value', Qualification.UrlParams[index])
				.appendTo('form');
		}
		
		//add visitor details to any forms on the page
		$.getJSON('//ip-api.com/json?callback=?', function(data) {
			$('<input />').attr('type', 'hidden')
				.attr('name', "user_region")
				.attr('value', data.regionName)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "user_country")
				.attr('value', data.country)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "user_city")
				.attr('value', data.city)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "zip")
				.attr('value', data.zip)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "ip")
				.attr('value', data.query)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "user_id")
				.attr('value', Qualification.User.visitorId)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "page_url")
				.attr('value', window.location.href)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "page_referer")
				.attr('value', document.referrer)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "session_url")
				.attr('value', Qualification.Visit.session_url)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "session_referrer")
				.attr('value', Qualification.Visit.session_referrer)
				.appendTo('form');
			if (Qualification.Segment !== null)	{
				$('<input />').attr('type', 'hidden')
					.attr('name', "segment_name")
					.attr('value', Qualification.Segment.name)
					.appendTo('form');
				$('<input />').attr('type', 'hidden')
					.attr('name', "segment_referenceCode")
					.attr('value', Qualification.Segment.referenceCode)
					.appendTo('form');
			}
			if ("experimentId" in Qualification)			
				$('<input />').attr('type', 'hidden')
				.attr('name', "experiment_name")
				.attr('value', Qualification.experimentId)
				.appendTo('form');
			
		
		});
		
		setHeight();
  
		$(window).resize(function() {
			setHeight();
		});        

		//All comments cause intercom to open message window when user name clicked
		$("a.staff-name").on('click', function(e){
			Intercom('showNewMessage');
		});
        
		//Click on change answer
		$('.change-ans').on('click',function(e){
			history.go(-1); 
			e.preventDefault();
		});
			
		//Call us button click
		$('.callus-btn').on('click',function(e){
			$('.callus-div').toggle();
			e.preventDefault();
		});

		//Site-wide sign up form functionality. Any form specific functionality should be setup at the page level
		$( "[id^=wf-form-portal-recommendations-sign-up]" ).submit(function( event ) {
			if (!$("[id^=wf-form-portal-recommendations-sign-up]")[0].checkValidity || $("[id^=wf-form-portal-recommendations-sign-up]")[0].checkValidity()) {
				
				//split the first and last name and add a last name field if one exists 
				var name = $("input[name='Name']").val();
				var lastName = getLastName(name, '');
				var firstName = getFirstName(name);
				$('<input />').attr('type', 'hidden')
					.attr('name', "first_name")
					.attr('value', firstName)
					.appendTo('form');
				if (lastName !== '')
				$('<input />').attr('type', 'hidden')
					.attr('name', "last_name")
					.attr('value', lastName)
					.appendTo('form');
				
				/* hide the form */
				$('.modal-popup-wrapper').fadeOut('slow');    
				$(document.documentElement).css('overflow', ''); //hack to prevent scrolling (in showing dialog) and now hiding and undoing that
          
				//trigger sign-up conversion for VWO
				window._vis_opt_queue = window._vis_opt_queue || [];
				window._vis_opt_queue.push(function() {_vis_opt_register_conversion(1,3);});
			  
				//trigger gtm
				window.dataLayer.push({
					'event' : 'GAEvent',
					'eventCategory' : 'sign-up form',
					'eventAction' : 'submitted',
					'eventLabel' : window.location.href,
					'eventValue' : undefined,
					'eventNonInteractionHit' : false
				});
			  
				//persist user details
				Qualification.User.first_name = firstName;
				Qualification.User.last_name = lastName;
				Qualification.User.email = $( "input[name='Email']" ).val();
				Qualification.User.company = $( "input[name='Company']" ).val();
				
				Qualification.DB.setItem('qualification.user', JSON.stringify(Qualification.User)); 
				
				//set cookie with user data 
				Cookies.set('user', Qualification.User, { expires: 7, domain: 'rentvillas.com' });
				
				//boot intercom
				window.Intercom("boot", {
					app_id: window.intercomAppId,
					name: toTitleCase(name), 
					email: Qualification.User.email,
					'ga client id': window.ga_clientId
				});
				
				dataLayer.push({
					'userId' : Qualification.User.visitorId,
					'event' : 'authentication'
				});
			}
			else {
				return false;
			}
        }); 
		

		$("[id^=wf-form-portal-recommendations-sign-up]").on('click','.btn',function(e){
			$("[id^=wf-form-portal-recommendations-sign-up] #signup-submit").trigger('click');
			e.preventDefault();
		});
        
    });
	
	//METHODS: recommendations 
</script>


<script src="//cdnjs.cloudflare.com/ajax/libs/webshim/1.15.10/minified/polyfiller.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/json3/3.3.2/json3.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/js-cookie/2.1.2/js.cookie.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.12.0/moment.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.5/handlebars.min.js"></script>
<script src="//rawgit.com/RevFunnel/Qualification/master/Qualification/webflow.qualification.functions.js?v=2"></script>
<script src="//rawgit.com/RevFunnel/Qualification/master/Qualification/scripts/pinterest_grid.js"></script>
<script src="//cdn.rawgit.com/Download/memorystorage/master/dist/memorystorage.min.js"></script>




