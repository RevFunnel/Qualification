<script type="text/javascript">  
	
    $(document).ready(function($){ 
	
		Qualification = new QualificationApp();

		$(window).load(function(){
			$.webshims.polyfill('forms');
		});

		var DateFormats = {
				short: "DD MMMM - YYYY",
				long: "dddd DD.MM.YYYY HH:mm",
				year: "YYYY",
				month: "MMMM",
				monthYear: "MMM YYYY"
			};
			
		// register helper to handle date formats in handlebar templates
		Handlebars.registerHelper("formatDate", function(datetime, format) {
		  if (moment) {
			// can use other formats like 'lll' too
			format = DateFormats[format] || format;
			return moment(datetime).format(format);
		  }
		  else {
			return datetime;
		  }
		});
		
		/* SEGMENTS */
		//add segments data if we have it (this is dynamically set via embed codes in dynamic collection)
		if ("segments" in window)
		{			
			Qualification.Segments = window.segments;
		}
		
		//grab defined segment from global object and set the title if we have it (set via embed code)
		if ("Segment" in window) Qualification.Segment = window.Segment;
		
		//if we don't have a segment defined, but we have one in the url then setup the segment
		if ((!('Segment' in Qualification)) && getParam('segId') && 'Segments' in Qualification){
			Qualification.Segment = Qualification.Segments[getParam('segId')];
		}
		
		//now persist our segment if we have set it up, or look to local storage for one if we still don't have one
		if ('Segment' in Qualification){
			Qualification.DB.setItem('qualification.segment', JSON.stringify(Qualification.Segment))
		}
		else {
			Qualification.Segment = window.JSON.parse(Qualification.DB.getItem('qualification.segment'));
		}
		
		if (!'Segment' in Qualification) throw 'No segment defined either in url or local storage';
		
		//setup the title for the segment based on url parameters that override the segment name for on-page dynamic replacement
		Qualification.Segment.title = (getParam('area') || getParam('title')) ? getParam('area') || getParam('title') : Qualification.Segment.name;
		$(".main-heading-span > span").html(Qualification.Segment.title);
		
		
		/*ANSWERS*/
		
		//do we have existing answers?
		var answers = window.JSON.parse(Qualification.DB.getItem('qualification.answers'));
		if (answers && !($.isEmptyObject(answers))){
			Qualification.Answers = answers;
		} else {
			//no, so loop through our query params for answers
			Qualification.Answers = Qualification.Answers || {};
			for(var key in Qualification.UrlParams) {
				if (Qualification.Questions[key]){
					Qualification.Answers = Qualification.Answers || {};
					//we have an answer so add to answers 
					Qualification.Answers[key] = {
						'id' : key,
						'value': Qualification.UrlParams[key]
					}
					var q = $.grep(Qualification.Questions[key],function(e){return e.val.toString() === Qualification.UrlParams[key]})[0];
					if (!(q === undefined)) Qualification.Answers[key].selectedText = q.text
				};
					
			}
			Qualification.DB.setItem('qualification.answers', JSON.stringify(Qualification.Answers))
		}
		
		Qualification.Session = sessionStorage;
		
		//is visitor returning?
		var user = window.JSON.parse(Qualification.DB.getItem('qualification.user'));
		if(user){
			
			Qualification.User = user;
			
			//boot intercom for user if we have email
			if ("email" in user){
				window.Intercom("boot", {
					app_id: "tx9uxfb3",
					user_id: user.visitorId
				});
			}
		
			//store details of the visit in session storage
			Qualification.Visit = window.JSON.parse(Qualification.Session.getItem('qualification.visit'));
			if (Qualification.Visit == undefined){
				Qualification.Visit = {
					'session_url': window.location.href,
					'session_referrer': document.referrer
				}
				Qualification.Session.setItem('qualification.visit', JSON.stringify(Qualification.Visit));
			}
		
		}else {
			//no, so assign a visitorId
			var uniqueId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
				var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);
				return v.toString(16);
			});	
			
			Qualification.User = {
				'visitorId':uniqueId,
				'session_url': window.location.href,
				'session_referrer': document.referrer
			};
			Qualification.DB.setItem('qualification.user', JSON.stringify(Qualification.User));
			
			Qualification.Visit = {
				'session_url': window.location.href,
				'session_referrer': document.referrer
			}
			Qualification.Session.setItem('qualification.visit', JSON.stringify(Qualification.Visit));
		}

		//add all query params to any forms on the page
		for(var index in Qualification.UrlParams) {
			$('<input />').attr('type', 'hidden')
				.attr('name', index)
				.attr('value', Qualification.UrlParams[index])
				.appendTo('form');
		}
		
		//add visitor details to any forms on the page
		$.getJSON('//ip-api.com/json?callback=?', function(data) {
			$('<input />').attr('type', 'hidden')
				.attr('name', "user_region")
				.attr('value', data.regionName)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "user_country")
				.attr('value', data.country)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "user_city")
				.attr('value', data.city)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "zip")
				.attr('value', data.zip)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "ip")
				.attr('value', data.query)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "user_id")
				.attr('value', Qualification.User.visitorId)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "page_url")
				.attr('value', window.location.href)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "page_referer")
				.attr('value', document.referrer)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "session_url")
				.attr('value', Qualification.Visit.session_url)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "session_referrer")
				.attr('value', Qualification.Visit.session_referrer)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "segment_name")
				.attr('value', Qualification.Segment.name)
				.appendTo('form');
			$('<input />').attr('type', 'hidden')
				.attr('name', "segment_referenceCode")
				.attr('value', Qualification.Segment.referenceCode)
				.appendTo('form');
						
		});
		
		setHeight();
  
		$(window).resize(function() {
			setHeight();
		});        
        
		//prevent scrolling when the sign up form is showing
/* 		$(".signup.wel-sec").mouseenter(function(){
			$(window).bind("scroll", function(e){
				e.preventDefault();
			}); 
		});        

		Scrollbar.initAll(); */
		
		
		//Click on change answer
		$('.change-ans').on('click',function(e){
			history.go(-1); 
			e.preventDefault();
		});
			
		//Call us button click
		$('.callus-btn').on('click',function(e){
			$('.callus-div').toggle();
			e.preventDefault();
		});

		//The sign up form 
		$( "#wf-form-emailSignupForm" ).submit(function( event ) {
			if (!$("#wf-form-emailSignupForm")[0].checkValidity || $("#wf-form-emailSignupForm")[0].checkValidity()) {
				/* submit the form */
				$('.signup-section').fadeOut('slow');    
          
				//trigger sign-up conversion for VWO
				window._vis_opt_queue = window._vis_opt_queue || [];
				window._vis_opt_queue.push(function() {_vis_opt_register_conversion(1,3);});
			  
				//trigger gtm
				window.dataLayer.push({
					'event' : 'GAEvent',
					'eventCategory' : 'sign-up form',
					'eventAction' : 'submitted',
					'eventLabel' : window.location.href,
					'eventValue' : undefined,
					'eventNonInteractionHit' : false
				});
			  
				//persist user details
				Qualification.User.first_name = getFirstName($("#wf-form-emailSignupForm #name").val());
				Qualification.User.last_name = getLastName($("#wf-form-emailSignupForm #name").val(), '');
				Qualification.User.email = $( "#wf-form-emailSignupForm #email" ).val();
				Qualification.DB.setItem('qualification.user', JSON.stringify(Qualification.User)); 
				
				//boot intercom
				window.Intercom("boot", {
					app_id: "tx9uxfb3",
					name: $("#wf-form-emailSignupForm #name").val(), 
					email: Qualification.User.email,
					user_id: Qualification.User.visitorId
				});
				
				dataLayer.push({
					'userId' : Qualification.User.visitorId,
					'event' : 'authentication'
				});
			}
			else {
				return false;
			}
        }); 
		
		$('#wf-form-emailSignupForm').on('click','.button.primary',function(e){
			
			//split the first and last name and add a last name field if one exists 
			var lastName = getLastName($("#wf-form-emailSignupForm #name").val(), '');
			var firstName = getFirstName($("#wf-form-emailSignupForm #name").val());
			$('<input />').attr('type', 'hidden')
					.attr('name', "first_name")
					.attr('value', firstName)
					.appendTo('form');
			if (lastName !== '')
				$('<input />').attr('type', 'hidden')
					.attr('name', "last_name")
					.attr('value', lastName)
					.appendTo('form');
			
			$('#wf-form-emailSignupForm #signup-submit').trigger('click');
			e.preventDefault();
		});
		
       
		//the share form
        $('#wf-form-share-form').on('click','.button.share-button',function(e){
           $('#share-submit').trigger('click');
			e.preventDefault();
        });    
        
        $('.share.w-button').on('click',function(e){
           $( "#wf-form-share-form" )[0].reset();
           $('.share-section').fadeIn('slow');  
           e.preventDefault();
        }); 

	
        $( "#wf-form-share-form" ).submit(function( event ) {
            $('.share .comment-top').fadeOut('slow');    
            setTimeout( function(){   
                 $( "#wf-form-share-form" )[0].reset();
                    $('.share-section').hide();
                    $('.share-success-message').hide();
					$( "#wf-form-share-form" ).fadeIn();
					$('.share .comment-top').fadeIn();    
            }, 5000);  
        });
        
		//fades out the share form when the close button is pressed
		$('.popup-close').on('click','.close-popup',function(e){
		   $(".share-section").fadeOut();
		   e.preventDefault();
		});
			
		//fades out the share form when the button is pressed
		$("body").click(function(event){
		  var $target = $(event.target);
		  if(!$target.is(".button.share")){
			 $(".share-section").fadeOut();
		  }
		});

		$(".share-section .dialog-content").click(function(e){
		   e.stopPropagation();
		});    
        
        
    });
	
	//METHODS: recommendations 
</script>


<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/webshim/1.15.10/minified/polyfiller.js"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/json3/3.3.2/json3.min.js"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min.js"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.12.0/moment.min.js"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.5/handlebars.min.js"></script>
<script type="text/javascript" src="//rawgit.com/RevFunnel/Qualification/master/Qualification/webflow.qualification.functions.js?v=2"></script>
<script type="text/javascript" src="//rawgit.com/RevFunnel/Qualification/master/Qualification/scripts/pinterest_grid.js"></script>
<script type="text/javascript" src="//cdn.rawgit.com/Download/memorystorage/master/dist/memorystorage.min.js"></script>




